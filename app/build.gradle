import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:2.2.3'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

apply plugin: 'retrolambda'

def generateVersionCode() {
    def now = new Date()
    def formatter = new SimpleDateFormat("yyMMddHH")
    Integer.parseInt(formatter.format(now))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "is.hello.sense"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode generateVersionCode()
        versionName "1.0.0"

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }
    signingConfigs {
        release {
            storeFile file("../../Hello-Android.keystore")
            storePassword "hellogoodbye"
            keyAlias "suripu"
            keyPassword "hellogoodbye"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            signingConfig signingConfigs.release

            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
    }
}

retrolambda {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "/usr/libexec/java_home", "-v", "1.8"
        standardOutput = stdout
    }
    jdk "$stdout".trim()
}

dependencies {
    // Is there anything we don't depend on?

    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.squareup.dagger:dagger:1.2.2'

    compile 'com.netflix.rxjava:rxjava-core:0.20.4'
    compile 'com.netflix.rxjava:rxjava-android:0.20.4'

    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.squareup.retrofit:converter-jackson:1.6.1'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.2'
    compile('com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.2') {
        // We use a special distribution of joda-time which is packaged
        // for Android, it conflicts with the joda-time imported by this
        // dependency. Goodbye dependency's joda-time.
        exclude group: 'joda-time'
    }

    compile 'net.danlew:android.joda:2.4.1'

    compile 'uk.co.chrisjenx:calligraphy:1.1.0'

    compile 'com.android.support:support-v13:20.0.0'
    compile 'com.google.android.gms:play-services:5.2.08'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':pirupea-ble')

    androidTestCompile ('com.jakewharton.espresso:espresso:1.1-r3') {
        exclude group: 'com.squareup.dagger', module: 'dagger'
        exclude group: 'org.hamcrest', module: 'hamcrest-integration'
    }

    //noinspection GradleDynamicVersion
    compile 'com.crashlytics.android:crashlytics:1.+'
}
